// call with inversions = 0 and index = 0 then call recursively to increment through elements and determine inversions
if (index > gridList.size()-1) { // tested all gridList numbers and found how many inversions there are
    return inversions;
} else {
    // find pairs of this element with all those above it
    int currentNum = gridList.get(index);
    for (int x=index; x<gridList.size(); x++) {  // find all pairs with current index and those greater than it
        Log.i(TAG, "gridInversions: x " + x);
        int pairNum = gridList.get(x);  // get the next highest index
        if (currentNum > pairNum) {  // inversion is if the paired number is greater than the current tested num
            inversions += 1;
        }
    }
    index+=1;
    return gridInversions(inversions, index, gridList);
}
